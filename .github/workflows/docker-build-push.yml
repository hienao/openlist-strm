name: Build and Push Docker Image

on:
  push:
    tags:
      - 'v*.*.*'
      - 'beta-v*.*.*'

env:
  REGISTRY: docker.io
  IMAGE_NAME: openlist-strm

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    if: |
      (github.ref_type == 'tag' && startsWith(github.ref_name, 'v') && !startsWith(github.ref_name, 'beta-v')) ||
      (github.ref_type == 'tag' && startsWith(github.ref_name, 'beta-v'))
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Check Docker Hub credentials
      env:
        DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      run: |
        if [ -z "$DOCKERHUB_USERNAME" ]; then
          echo "❌ Error: DOCKERHUB_USERNAME variable is not configured"
          echo "Please add DOCKERHUB_USERNAME variable and DOCKERHUB_TOKEN secret in repository settings"
          echo "See .github/DOCKER_SETUP.md for detailed instructions"
          exit 1
        fi
        if [ -z "$DOCKERHUB_TOKEN" ]; then
          echo "❌ Error: DOCKERHUB_TOKEN secret is not configured"
          echo "Please add DOCKERHUB_USERNAME variable and DOCKERHUB_TOKEN secret in repository settings"
          echo "See .github/DOCKER_SETUP.md for detailed instructions"
          exit 1
        fi
        echo "✅ Docker Hub credentials are configured"
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Extract metadata for release tags (v*.*.*)
      id: meta-release
      if: startsWith(github.ref_name, 'v') && !startsWith(github.ref_name, 'beta-v')
      uses: docker/metadata-action@v5
      with:
        images: docker.io/${{ vars.DOCKERHUB_USERNAME }}/openlist-strm
        tags: |
          type=ref,event=tag
          type=raw,value=latest

    - name: Extract metadata for beta tags (beta-v*.*.*)
      id: meta-beta
      if: startsWith(github.ref_name, 'beta-v')
      uses: docker/metadata-action@v5
      with:
        images: docker.io/${{ vars.DOCKERHUB_USERNAME }}/openlist-strm
        tags: |
          type=ref,event=tag
        flavor: |
          latest=false
          
    - name: Build and push Docker image (release)
      id: build-and-push-release
      if: startsWith(github.ref_name, 'v') && !startsWith(github.ref_name, 'beta-v')
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta-release.outputs.tags }}
        labels: ${{ steps.meta-release.outputs.labels }}
        build-args: |
          APP_VERSION=${{ github.ref_name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Create source code archive
      if: startsWith(github.ref_name, 'v') && !startsWith(github.ref_name, 'beta-v')
      run: |
        # 创建源码压缩包，排除不必要的文件
        zip -r "openlist-strm-${{ github.ref_name }}-source.zip" . \
          -x "*.git*" \
          -x "node_modules/*" \
          -x "target/*" \
          -x "*.log" \
          -x ".DS_Store" \
          -x "Thumbs.db"

        # 显示压缩包信息
        ls -lh "openlist-strm-${{ github.ref_name }}-source.zip"

    - name: Build Changelog
      id: github_release
      if: startsWith(github.ref_name, 'v') && !startsWith(github.ref_name, 'beta-v')
      uses: mikepenz/release-changelog-builder-action@v4
      with:
        configuration: ".github/release-changelog-config.json"
        ignorePreReleases: true
        fetchViaCommits: true
        commitMode: true
        fetchReviewers: false
        fetchReleaseInformation: true
        includeOpen: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Debug Changelog Output
      if: startsWith(github.ref_name, 'v') && !startsWith(github.ref_name, 'beta-v')
      run: |
        echo "Generated changelog:"
        echo "${{ steps.github_release.outputs.changelog }}"
        echo "Changelog length: ${#changelog}"
        if [ -z "${{ steps.github_release.outputs.changelog }}" ]; then
          echo "⚠️ Warning: Changelog is empty!"
        fi

    - name: Create GitHub Release
      if: startsWith(github.ref_name, 'v') && !startsWith(github.ref_name, 'beta-v')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # 检查changelog是否为空，如果为空则使用默认内容
        CHANGELOG="${{ steps.github_release.outputs.changelog }}"
        if [ -z "$CHANGELOG" ] || [ "$CHANGELOG" = "- No changes" ]; then
          CHANGELOG="## 📝 Changes

        This release includes various improvements and bug fixes.

        For detailed changes, please check the commit history between tags."
        fi

        gh release create "${{ github.ref_name }}" \
          --title "Release ${{ github.ref_name }}" \
          --notes "$CHANGELOG" \
          --latest \
          "openlist-strm-${{ github.ref_name }}-source.zip"

    - name: Build and push Docker image (beta)
      id: build-and-push-beta
      if: startsWith(github.ref_name, 'beta-v')
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta-beta.outputs.tags }}
        labels: ${{ steps.meta-beta.outputs.labels }}
        build-args: |
          APP_VERSION=${{ github.ref_name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Image digest
      run: |
        if [ "${{ steps.build-and-push-release.outputs.digest }}" != "" ]; then
          echo "Release digest: ${{ steps.build-and-push-release.outputs.digest }}"
        fi
        if [ "${{ steps.build-and-push-beta.outputs.digest }}" != "" ]; then
          echo "Beta digest: ${{ steps.build-and-push-beta.outputs.digest }}"
        fi